version: '3.8'

services:
  db:
    image: postgres:13-alpine
    container_name: inventorysystem-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backups  

  app:
    build:
      context: .
      dockerfile: Dockerfile  
    container_name: inventorysystem-app
    ports:
      - "3000:3000"
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
    depends_on:
      - db
    volumes:
      - .:/app
      - /app/node_modules
      - ./logs:/app/logs  


  test:
    build:
      context: .
      dockerfile: Dockerfile  
    container_name: inventorysystem-test
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
    depends_on:
      - db
    entrypoint: ["tail", "-f", "/dev/null"]  
  
  backup:
    image: postgres:13-alpine
    container_name: inventorysystem-backup
    depends_on:
      - db
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - ./backups:/backups
    entrypoint: ["/bin/sh", "-c"]
    command:
      - |
        while true; do
          echo "Creando backup..."
          PGPASSWORD=${POSTGRES_PASSWORD} pg_dump -U ${POSTGRES_USER} -h db -d ${POSTGRES_DB} > /backups/snapshot_$(date +\%F).sql
          find /backups -type f -mtime +3 -name "snapshot_*.sql" -exec rm {} \;
          echo "Backup completado."
          sleep 86400
        done
  
volumes:
  postgres_data:
    driver: local
